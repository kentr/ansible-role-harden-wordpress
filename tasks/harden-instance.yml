---

# Hardens a single WordPress instance.
# Expects parameter:
# item:
#   root: Required. Absolute path to the item's root web folder.  No default.
#   uploads_dir: Optional. Path to uploads directory, relative to the item's root.  Defaults to "wp-content/uploads".

- name: Check for WordPress installation.
  stat:
    path: "{{ item.root }}/wp-config.php"
  register: wp_config

- name: Fail on invalid installation.
  fail:
    msg: |
      This doesn't appear to be a valid WordPress installation.
      Can't find {{ item.root }}/wp-config.php.
  when: wp_config.stat.isreg | default(False) == False

- name: Disable PHP execution in uploads directory.
  blockinfile:
    dest:  "{{ item.root }}/{{ item.uploads_dir | default('wp-content/uploads') }}/.htaccess"
    create: yes
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: EOF
    state: present
    content: |
      # Disable PHP execution in uploads directory.
      # See https://codex.wordpress.org/Hardening_WordPress#WP-Content.2FUploads
      <Files *.php>
      deny from all
      </Files>
  when: wordpress_harden_disable_uploads_php | default(True)

- name: Ensure .htaccess exists.
  template:
    # Don't replace existing file.
    force: no
    src: templates/.htaccess.j2
    dest: "{{ item.root }}/.htaccess"
  when: item.type == "wordpress"

- name: Deny access to wp-config.php.
  blockinfile:
    dest:  "{{ item.root }}/.htaccess"
    create: no
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
    insertafter: "# END WordPress"
    state: present
    content: |
      # Deny access to wp-config.php.
      # See https://codex.wordpress.org/Hardening_WordPress#WP-Config.php
      <files wp-config.php>
      order allow,deny
      deny from all
      </files>
  when: wordpress_harden_deny_wpconfig_access | default(True)

- name: Disable file editing.
  blockinfile:
    dest:  "{{ item.root }}/wp-config.php"
    create: no
    backup: yes
    marker: "//# {mark} ANSIBLE MANAGED BLOCK"
    insertbefore: ".*stop editing.*"
    state: present
    content: |
      // Disable file editing.
      // See https://codex.wordpress.org/Hardening_WordPress#Disable_File_Editing
      // Disable Editing in Dashboard
      define('DISALLOW_FILE_EDIT', true);
  when: wordpress_harden_disable_file_edits | default(True)
